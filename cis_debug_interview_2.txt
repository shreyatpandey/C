/* Org Code */
#include <stdio.h>
#include <stdlib.h>
typedef  struct node_ 
{
    int data;
    struct node_ *ptr;
} node_t;

void add_node (node_t *head, int data)
{
    node_t *temp;
    temp = (node_t *) malloc(sizeof(node_t)); 
    if (NULL == temp) 
    {
        return;
    }
    temp->data = data;
    temp->ptr = NULL;
    if (head == NULL) 
    {
        head = temp; 
    } 
    else 
    {          
        temp->ptr = head; 
        head = temp;
    } 

}
void remove_node (node_t *head) 
{
   // printf("remove_node:%d\n",head->data);
    if (head == NULL) 
    {
        return;
    }
    head = head->ptr; 
    return;
}
void show_nodes (node_t *head)
{
    
    while (head->ptr) 
    {            
        printf("\n %d", head->data);
        head = head->ptr;
    }
}
int main (void)
{
    node_t *head; 
    int i;
    printf("\n add x 10 ::");
    for (i = 0; i < 10; i++) 
    { 
        add_node(head,i);
    }
    printf("\n show ::");
    show_nodes(head);
    printf("\n remove x 5 ::");
    for (i = 0; i < 5; i++) 
    {
       remove_node(head);
    }
    printf("\n show ::");
    show_nodes(head);
}

/*Modification but some remained */
#include <stdio.h>
#include <stdlib.h>
typedef  struct node_ 
{
    int data;
    struct node_ *ptr;
} node_t;

void add_node (node_t **head, int data)   /*Mod-2*/
{
    node_t *temp;
    temp = (node_t *) malloc(sizeof(node_t)); 
    if (NULL == temp) 
    {
        return;
    }
    temp->data = data;
    temp->ptr = NULL;
    if (*head == NULL) 
    {
        *head = temp; 
    } 
    else 
    {          
        temp->ptr = *head; 
        *head = temp;
    } 

}
void remove_node (node_t *head) 
{
   // printf("remove_node:%d\n",head->data);
    if (head == NULL) 
    {
        return;
    }
    head = head->ptr; 
    return;
}
void show_nodes (node_t *head)
{
    
    while (head != NULL) /*Mod-3*/
    {            
        printf("\n %d", head->data);
        head = head->ptr;
    }
}
int main (void)
{
    node_t *head = NULL; /*mod-1*/
    int i;
    printf("\n add x 10 ::");
    for (i = 0; i < 10; i++) 
    { 
        add_node(&head,i); /*mod-2*/
    }
    printf("\n show ::");
    show_nodes(head);
    printf("\n remove x 5 ::");
    for (i = 0; i < 5; i++) 
    {
       remove_node(head);
    }
    printf("\n show ::");
    show_nodes(head);
}

